version: "3.8"
services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "${DOCKER_PREFIX}_web"
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    env_file:
      - .env
    volumes:
      - ./src:/var/www/html
      - ./.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - backend

  # Webserver Service
  nginx:
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
    container_name: "${DOCKER_PREFIX}_nginx"
    restart: unless-stopped
    tty: true
    ports:
      - "${FORWARD_APP_PORT}:443"
    volumes:
      - ./src:/var/www/html
    networks:
      - backend

  # Node service for build Frontend
  node:
    image: node:18-alpine3.14
    container_name: ${DOCKER_PREFIX}_node
    hostname: ${DOCKER_PREFIX}_node
    working_dir: /var/www/html
    command: /bin/sh -c "yarn install && yarn run dev"
    volumes:
      - ./src:/var/www/html
    networks:
      - backend

  # MySQL Service
  db:
    image: "mysql:8.0"
    container_name: "${DOCKER_PREFIX}_mysql"
    ports:
      - "${FORWARD_DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${MYSQL_DATABASE}"
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: "${MYSQL_ALLOW_EMPTY_PASSWORD}"
    volumes:
      - ./db:/var/lib/mysql
      - ./.docker/mysql/mysql.cnf:/etc/mysql/mysql.cnf
    command: mysqld --default-authentication-plugin=mysql_native_password
    networks:
      - backend

# Docker Networks
networks:
  backend:
    driver: bridge

# Docker Volumes
volumes:
  db:
    name: "${DOCKER_PREFIX}_db"
